security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
    #    in_memory: { memory: ~ }
        chain_provider:
            chain:
                providers: [in_memory, our_db_provider]
        in_memory:
            memory:
                users:
                    admin@admin.com:
                        password: admin
                        roles: 'ROLE_ADMIN'
        our_db_provider:
            entity:
                class: App\Entity\User
                property: email

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: ~
            form_login:
                login_path: login
                check_path: login
                # ovo je potrebno kada koristim {{form}}. za cist kod ne treba
                username_parameter: "login_form[_username]"
                password_parameter: "login_form[_password]"
            provider: chain_provider
            logout:
                path: /logout

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
         - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/login, roles: ROLE_USER }

    encoders:
        App\Entity\User: bcrypt
        Symfony\Component\Security\Core\User\User: plaintext
    #    Symfony\Component\Security\Core\User\User:
       #     algorithm: bcrypt
        #    cost: 12


